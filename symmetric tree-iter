/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        if(root==NULL)
            return true;
     queue<TreeNode*> temp1;
     queue<TreeNode*> temp2;
        TreeNode* node1;
        TreeNode* node2;
        
     temp1.push(root);
     temp2.push(root);
     while(temp1.size()!=0 && temp2.size()!=0)
     {
         if(temp1.front()==NULL && temp2.front()==NULL)
         {
             temp1.pop();
             temp2.pop();
         }
         else
         if(temp1.front()==NULL || temp2.front()==NULL)
            return false;
         else
         if(temp1.front()->val==temp2.front()->val)
         {
             node1=temp1.front();
             node2=temp2.front();
             temp1.pop();
             temp2.pop();
             
              temp1.push(node1->left);
              temp1.push(node1->right);             
              temp2.push(node2->right);
              temp2.push(node2->left);
         }
         else
         {
             return false;
         }
      }
      return true;  
    }
};
