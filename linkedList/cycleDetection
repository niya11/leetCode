/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        ListNode* fast;
        ListNode* slow;
        fast=head;
        slow=head;
        while(fast!=NULL && slow!=NULL)
        {
            if(slow->next!=NULL)
            {
                slow=slow->next;
            }
            else
                return false;
            if(fast->next!=NULL && fast->next->next!=NULL)
            {
                fast=fast->next->next;
            }
            else
                return false;
            if(slow==fast)
                return true;
        }
        return false;
    }
};
