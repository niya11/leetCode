/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode *detectCycle(ListNode *head) {
        ListNode* fast=head;
        ListNode* slow=head;
        while(fast!=NULL)
        {
            if(fast->next!=NULL && fast->next->next!=NULL)
            {
                fast=fast->next->next;
            }
            else
                return NULL;
            
            if(slow->next!=NULL)
            {
                slow=slow->next;
            }
            if(slow==fast)
            {
                ListNode* temp=head;
                while(temp!=slow)
                {
                    slow=slow->next;
                    temp=temp->next;
                }
                return temp;
            }
        }
        return NULL;
    }
};
