 void twoSum(vector<int> nums, vector<vector<int>> &results, int target, int left, int right)
    {
        while(left<right)
        {
            if(nums[left]+nums[right]==target)
            {
                results.push_back({target*-1,nums[left],nums[right]});
                left++;
                right--;
            
            while(left<right && (nums[left]==nums[left-1]))
                left++;
            
             while(left<right && (nums[right]==nums[right+1]))
                right--;
            }
            else
                if(nums[left]+nums[right]>target)
                {
                    right--;
                }
               else
               {
                left++;
                }
        }
        
    }
        vector<vector<int>> threeSum(vector<int>& nums) {
            vector<vector<int>> results;
             if(nums.size()<3)
                return results;
            sort(nums.begin(),nums.end());
            for(int i=0;i<nums.size()-2;i++)
            {
                if(i>0 && nums[i]==nums[i-1])
                    continue;
                int target=nums[i]*-1;
                int left=i+1;
                int right=nums.size()-1;
                twoSum(nums,results,target,left,right);
            }
            
            return results;
     }
