class Solution {
public:
    void helper(vector<int> &nums, int start, vector<int> &mid, set<vector<int>> &res)
    {
        if(mid.size()>1)
            res.insert(mid);
        for(int i=start;i<nums.size();i++)
        {
            if(!mid.empty() && nums[i]<mid.back())
                continue;
            mid.push_back(nums[i]);
            helper(nums,i+1,mid,res);
            mid.pop_back();
        }
        
    }
    vector<vector<int>> findSubsequences(vector<int>& nums) {
        if(nums.size()<=1)
            return {};
        vector<int> mid;
        set<vector<int>> res;
        helper(nums,0,mid,res);
        return vector<vector<int>>(res.begin(),res.end());
       
    }
};
