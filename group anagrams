class Solution {
public:
    vector<vector<string>> groupAnagrams(vector<string>& strs) {
        if(strs.size()==0)
            return {};
        
        map<string,vector<string>> mapper;
        vector<vector<string>> ans;
        for(int i=0;i<strs.size();i++)
        {
            string str;
            int arr[26]={0};
            for(int j=0;j<strs[i].size();j++)
            {
                arr[(int)(strs[i][j]-'a')]++;
            }
            for(int i=0;i<26;i++)
            {
                if(arr[i]!=0)
                    str=str+((char)(i+97))+((char)arr[i]);
            }
            if(mapper.find(str)!=mapper.end())
            {
                mapper.find(str)->second.push_back(strs[i]);
            }
            else
            {
                vector<string> temp;
                temp.push_back(strs[i]);
                mapper.insert(pair(str,temp));
            }
        }
        for(map<string,vector<string>>::iterator itr=mapper.begin();itr!=mapper.end();itr++)
        {
            ans.push_back(itr->second);
        }
  
        return ans;
    }
};
